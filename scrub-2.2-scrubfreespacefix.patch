diff -up scrub-2.2/src/scrub.c.scrubfreespacefix scrub-2.2/src/scrub.c
--- scrub-2.2/src/scrub.c.scrubfreespacefix	2014-03-17 15:29:38.105646621 +0100
+++ scrub-2.2/src/scrub.c	2014-03-17 15:37:33.805152621 +0100
@@ -186,7 +186,7 @@ main(int argc, char *argv[])
      */
     if (Xopt) {
         if (filetype(filename) != NOEXIST) {
-            fprintf(stderr, "%s: -X argument cannot exist\n", prog);
+            fprintf(stderr, "%s: -X directory already exists\n", prog);
             exit(1);
         }
         if (Dopt) {
@@ -345,6 +345,11 @@ scrub(char *path, off_t size, const sequ
             assert(enospc == true);
             isfull = true; 
             size = written;
+	    if (size == 0) {
+		    fprintf(stderr, "%s: file system is full (0 bytes written)\n",
+			    prog);
+		    break;
+	    }
         }
     }
     if (!Sopt)
@@ -397,6 +402,7 @@ scrub_free(char *dirpath, off_t size, co
         fprintf(stderr, "%s: mkdir %s: %s\n", prog, path, strerror(errno));
         exit(1);
     } 
+    fprintf (stderr, "%s: created directory %s\n", prog, dirpath);
     if (stat(dirpath, &sb) < 0) {
         fprintf(stderr, "%s: stat %s: %s\n", prog, path, strerror(errno));
         exit(1);
@@ -413,6 +419,17 @@ scrub_free(char *dirpath, off_t size, co
         snprintf(path, sizeof(path), "%s/scrub.%.3d", dirpath, fileno++);
         isfull = scrub(path, size, seq, bufsize, Sopt, false, true, false);
     } while (!isfull);
+    while (--fileno >= 0) {
+	    snprintf(path, sizeof(path), "%s/scrub.%.3d", dirpath, fileno);
+	    if (unlink(path) < 0)
+		    fprintf(stderr, "%s: unlink %s: %s\n", prog, path, strerror(errno));
+	    else
+		    fprintf(stderr, "%s: unlinked %s\n", prog, path);
+    }
+    if (rmdir(dirpath) < 0)
+	    fprintf(stderr, "%s: rmdir %s: %s\n", prog, dirpath, strerror(errno));
+    else
+	    fprintf(stderr, "%s: removed %s\n", prog, dirpath);
 }
 
 /* Scrub name component of a directory entry through succesive renames.
